rules_version = '2';
service cloud.firestore {
  function isMemberOfCourse(courseId) {
    let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    return courseId in user.courses;
  }
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write, update, create: if request.auth != null && request.auth.uid == userId
                   && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['active_course', 'display_name']);
    }
    
    match /courses/{courseId} {
      allow read: if request.auth != null;
    }
    
    match /lobby_chats/{courseId}/messages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
                    && request.resource.data.keys().hasAll(['text', 'authorId', 'authorName', 'timestamp'])
                    && request.resource.data.authorId == request.auth.uid;
    }

    match /private_chats/{chatId} {
      allow read, write: if request.auth != null && isParticipantInPrivateChat(chatId);
      
      match /messages/{messageId} {
        allow read, create: if request.auth != null && isParticipantInPrivateChat(chatId)
                            && request.resource.data.keys().hasAll(['text', 'authorId', 'authorName', 'timestamp'])
                            && request.resource.data.authorId == request.auth.uid;
      }
    }
  }
}